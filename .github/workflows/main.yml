# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key}}
          aws-secret-access-key: ${{ secrets.aws_secret }}
          aws-region: us-east-1

      - name: AWS ECS deploy
        # You may pin to the exact commit or the version.
        # uses: robertomoutinho/gh-action-ecs-deploy@3620904b3ea99e9de37e2a3fb6bf0880080d8f8f
        uses: robertomoutinho/gh-action-ecs-deploy@v1.0.0
        with:
          # The ECS cluster name where to deploy
          ecs_cluster: 
          # The ECS service name where to deploy
          ecs_service: demo-ecs
          # The container name to be updated
          ecs_container_name: default
          # The app docker repository URL
          app_repo_url: public.ecr.aws/nginx/nginx:perl
          # The docker image tag to deploy
          app_version: 
          # The aws region
          aws_region: us-eastt-1
          # The aws access key id
          aws_access_key_id: ${{ secrets.aws_access_key}}
          # The aws secret access key
          aws_secret_access_key: ${{ secrets.aws_secret }}